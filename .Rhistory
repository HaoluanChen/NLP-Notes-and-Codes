count(word2, value, sort = TRUE)
AFINN <- get_sentiments("afinn")
not_words <- bigrams_separated %>%
filter(word1 == "not") %>%
inner_join(AFINN, by = c(word2 = "word")) %>%
count(word2, value, sort = TRUE)
not_words
AFINN <- get_sentiments("afinn")
not_words <- bigrams_separated %>%
filter(word1 == "not") %>%
inner_join(AFINN, by = c(word2 = "word")) %>%
count(word2, value, sort = TRUE)
not_words
not_words <- bigrams_separated %>%
filter(word1 == "not") %>%
inner_join(AFINN, by = c(word2 = "word")) %>%
count(word2, value, sort = TRUE)
not_words
AFINN <- get_sentiments("afinn")
AFINN
AFINN <- get_sentiments("afinn")
not_words <- bigrams_separated %>%
filter(word1 == "not") %>%
inner_join(AFINN, by = c(word2 = "word")) %>%
count(word2, value, sort = TRUE)
not_words
negation_words <- c("not", "no", "never", "without")
negated_words <- bigrams_separated %>%
filter(word1 %in% negation_words) %>%
inner_join(AFINN, by = c(word2 = "word")) %>%
count(word1, word2, value, sort = TRUE)
negated_words
negated_words <- bigrams_separated %>%
filter(word1 %in% negation_words)
negated_words
negation_words <- c("not", "no", "never", "without")
negated_words <- bigrams_separated %>%
filter(word1 %in% negation_words) %>%
inner_join(AFINN, by = c(word2 = "word")) %>%
count(word1, word2, value, sort = TRUE)
negated_words
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidytext)
library(ggplot2)
library(tidyr)
library(scales)
library(wordcloud)
negation_words <- c("not", "no", "never", "without")
negated_words <- bigrams_separated %>%
filter(word1 %in% negation_words) %>%
inner_join(AFINN, by = c(word2 = "word")) %>%
count(word1, word2, value, sort = TRUE)
negated_words
news_word %>%
arrange(desc(tf_idf)) %>%
group_by(article) %>%
top_n(10) %>%
ungroup() %>%
ggplot(aes(word, tf_idf, fill = article)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~article, ncol = 2, scales = "free") +
coord_flip()
news_word <-news_word%>%
arrange(desc(tf_idf)) %>%
mutate(word = factor(word, levels = rev(unique(word))))
bigram_tf_idf %>%
group_by(article) %>%
top_n(3) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = article)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~article, ncol = 2, scales = "free") +
coord_flip()
library(igraph)
bigram_counts
bigram_graph <- bigram_counts %>%
filter(n > 3) %>%
graph_from_data_frame()
bigram_graph
library(ggraph)
install.packages("ggraph")
install.packages("ggraph")
install.packages("ggraph")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidytext)
library(ggplot2)
library(tidyr)
library(scales)
library(wordcloud)
library(igraph)
library(ggraph)
install.packages("ggraph")
install.packages("ggraph")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidytext)
library(ggplot2)
library(tidyr)
library(scales)
library(wordcloud)
library(igraph)
bigram_graph <- bigram_counts %>%
graph_from_data_frame()
bigram_graph <- bigram_counts %>%
graph_from_data_frame()
bigram_graph
library(ggraph)
install.packages("ggraph")
library(tidygraph)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidytext)
library(ggplot2)
library(tidyr)
library(scales)
library(wordcloud)
library(igraph)
set.seed(2017)
ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
library(ggraph)
install.packages("dplyr")
install.packages("dplyr")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("dplyr")
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidytext)
library(ggplot2)
library(tidyr)
library(tidyr)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidytext)
library(ggplot2)
library(scales)
library(wordcloud)
library(igraph)
set.seed(2017)
library(ggraph)
load(dplyr)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidytext)
library(ggplot2)
library(scales)
library(wordcloud)
library(igraph)
set.seed(2017)
library(ggraph)
ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidytext)
library(ggplot2)
library(scales)
library(wordcloud)
library(igraph)
set.seed(2017)
library(ggraph)
install.packages("dplyr")
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidytext)
library(ggplot2)
library(scales)
library(wordcloud)
library(igraph)
set.seed(2017)
library(ggraph)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidytext)
library(ggplot2)
library(scales)
library(wordcloud)
library(igraph)
set.seed(2017)
library(ggraph)
ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
bigram_graph <- bigram_counts %>%
filter(n >2)
graph_from_data_frame()
bigram_graph
bigram_graph <- bigram_counts %>%
filter(n >2)
graph_from_data_frame()
bigram_graph <- bigram_counts %>%
filter(n >2) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
library(ggraph)
ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
bigram_graph <- bigram_counts %>%
filter(n >1) %>%
graph_from_data_frame()
bigram_graph
set.seed(2017)
library(ggraph)
ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
library(tidyr)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidytext)
library(ggplot2)
library(scales)
library(tidyr)
library(wordcloud)
library(igraph)
a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
ggraph(bigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, 'inches')) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidytext)
library(ggplot2)
library(scales)
library(tidyr)
library(wordcloud)
library(igraph)
a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
ggraph(bigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, 'inches')) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
set.seed(2017)
library(ggraph)
ggraph(bigram_graph, layout = "fr") +
geom_edge_link() +
geom_node_point() +
geom_node_text(aes(label = name), vjust = 1, hjust = 1)
a <- grid::arrow(type = "closed", length = unit(.15, "inches"))
ggraph(bigram_graph, layout = "fr") +
geom_edge_link(aes(edge_alpha = n), show.legend = FALSE,
arrow = a, end_cap = circle(.07, 'inches')) +
geom_node_point(color = "lightblue", size = 5) +
geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
theme_void()
news_word <- news_word %>%
unnest_tokens(word, text) %>%
filter(!word %in% stop_words$word)
news_word
# count words co-occuring within sections
word_pairs <- news_word %>%
pairwise_count(word, section, sort = TRUE)
news_word <- tibble(article = 1:3, text = newsdata)
news_word <- news_word %>%
unnest_tokens(word, text) %>%
filter(!word %in% stop_words$word)
news_word
library(widyr)
install.packages("widyr")
news_word <- tibble(article = 1:3, text = newsdata)
news_word <- news_word %>%
unnest_tokens(word, text) %>%
filter(!word %in% stop_words$word)
news_word
library(widyr)
# count words co-occuring within sections
word_pairs <- news_word %>%
pairwise_count(word, section, sort = TRUE)
# count words co-occuring within sections
word_pairs <- news_word %>%
pairwise_count(word, article, sort = TRUE)
word_pairs
word_pairs %>%
filter(item1 == canada)
word_pairs %>%
filter(item1 == "canada")
\begin{tabular}{||c c c c||}
\hline
& Has word Y & No word Y & Total \\ [0.5ex]
\hline\hline
Has word X & n_11 & n_10 & n_{1.} \\
\hline
No word X & n_01 & n_00 & n_{0.} \\
\hline
Total & n_{.1} & n_{.0} & n \\[1ex]
\hline
\end{tabular}
word_cors <- news_word %>%
group_by(word) %>%
filter(n() >= 20) %>%
pairwise_cor(word, section, sort = TRUE)
word_pairs %>%
filter(item1 == "canada")
word_cors <- news_word %>%
group_by(word) %>%
pairwise_cor(word, section, sort = TRUE)
news_word
word_cors <- news_word %>%
group_by(word) %>%
pairwise_cor(word, section, sort = TRUE)
word_pairs %>%
filter(item1 == "canada")
news_word <- tibble(article = 1:3, text = newsdata)
news_word <- news_word %>%
unnest_tokens(word, text) %>%
filter(!word %in% stop_words$word)
news_word
library(widyr)
# count words co-occuring within sections
word_pairs <- news_word %>%
pairwise_count(word, article, sort = TRUE)
word_pairs
word_cors <- news_word %>%
group_by(word) %>%
pairwise_cor(word, section, sort = TRUE)
word_cors <- news_word %>%
pairwise_cor(word, section, sort = TRUE)
word_cors <- news_word %>%
group_by(word) %>%
pairwise_cor(word, article, sort = TRUE)
word_cors
word_cors <- news_word %>%
group_by(word) %>%
filter(n() >= 1) %>%
pairwise_cor(word, section, sort = TRUE)
word_cors <- news_word %>%
group_by(word) %>%
pairwise_cor(word, section, sort = TRUE)
word_cors <- news_word %>%
filter(n() >= 1) %>%
pairwise_cor(word, section, sort = TRUE)
word_cors <- news_word %>%
group_by(word) %>%
filter(n() >= 1) %>%
pairwise_cor(word, article, sort = TRUE)
word_cors
word_cors <- news_word %>%
filter(n() >= 1) %>%
pairwise_cor(word, article, sort = TRUE)
word_cors
View(word_cors)
word_cors <- news_word %>%
filter(n() >= 3) %>%
pairwise_cor(word, article, sort = TRUE)
word_cors
word_cors <- news_word %>%
filter(n() >= 4) %>%
pairwise_cor(word, article, sort = TRUE)
word_cors
word_cors <- news_word %>%
filter(n() >= 5) %>%
pairwise_cor(word, article, sort = TRUE)
word_cors
word_cors <- news_word %>%
filter(n() >= 6) %>%
pairwise_cor(word, article, sort = TRUE)
word_cors
word_cors <- news_word %>%
filter(n() >= 7) %>%
pairwise_cor(word, article, sort = TRUE)
word_cors
word_cors <- news_word %>%
filter(n() >= 20) %>%
pairwise_cor(word, article, sort = TRUE)
word_cors
word_cors <- news_word %>%
filter(n() >= 20) %>%
word_cors
word_cors <- news_word %>%
filter(n() >= 10) %>%
word_cors
word_cors <- news_word %>%
filter(n() >= 10)
word_cors
word_cors <- news_word %>%
filter(n() >= 12)
word_cors
word_cors <- news_word %>%
filter(n() >= 15)
word_cors
word_cors <- news_word %>%
count(word)
filter(n() >= 15)
word_cors
12
12
12
12
word_cors <- news_word %>%
filter(n() >= 12)
word_cors
word_cors <- news_word %>%
count(word)
word_cors
filter(n() >= 4)
word_cors
word_cors <- news_word %>%
count(word) %>%
filter(n() >= 4)
word_cors
word_cors <- news_word %>%
count(word) %>%
filter(n>= 4)
word_cors
word_cors <- news_word %>%
count(word) %>%
filter(n >= 10)
word_cors
word_cors <- news_word %>%
count(word) %>%
filter(n >= 5)
word_cors
word_cors <- news_word %>%
count(word) %>%
filter(n >= 5) %>%
pairwise_cor(word, section, sort = TRUE)
word_cors <- news_word %>%
count(word) %>%
filter(n >= 5) %>%
pairwise_cor(word, article, sort = TRUE)
word_cors
news_word
news_word <- news_word %>%
unnest_tokens(word, text) %>%
filter(!word %in% stop_words$word)
news_word <- tibble(article = 1:3, text = newsdata)
news_word <- news_word %>%
unnest_tokens(word, text) %>%
filter(!word %in% stop_words$word)
news_word
word_cors <- news_word %>%
group_by(word)
filter(n >= 5) %>%
pairwise_cor(word, article, sort = TRUE)
filter(n >= 2) %>%
pairwise_cor(word, article, sort = TRUE)
word_cors <- news_word %>%
group_by(word)
filter(n >= 2) %>%
pairwise_cor(word, article, sort = TRUE)
word_cors <- news_word %>%
group_by(word)
filter(n() >= 2) %>%
pairwise_cor(word, article, sort = TRUE)
word_cors <- news_word %>%
group_by(word) %>%
filter(n() >= 2) %>%
pairwise_cor(word, article, sort = TRUE)
word_cors
word_cors <- news_word %>%
group_by(word) %>%
filter(n() >= 3) %>%
pairwise_cor(word, article, sort = TRUE)
word_cors
word_cors <- news_word %>%
group_by(word) %>%
filter(n() >= 5) %>%
pairwise_cor(word, article, sort = TRUE)
word_cors
word_cors %>%
filter(item1 = "Canada")
word_cors %>%
filter(item1 == "Canada")
word_cors %>%
filter(item2 == "Canada")
word_cors
word_cors %>%
filter(item2 == "wildfires")
plot1 <- news_df %>%
count(word, sort = TRUE) %>%
filter(n > 3) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word,n)) +
geom_col() +
xlab(NULL) +
coord_flip()
news_df %>%
count(word, sort = TRUE) %>%
filter(n > 3) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word,n)) +
geom_col() +
xlab(NULL) +
coord_flip()
plot1
